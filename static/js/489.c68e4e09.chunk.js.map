{"version":3,"file":"static/js/489.c68e4e09.chunk.js","mappings":"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","sources":["components/ElevationScroll.js","components/Nav.js","components/CreateInvoiceTable.js","pages/CreateInvoice.js","utils/functions.js","utils/muiStyles.js"],"sourcesContent":["import useScrollTrigger from '@mui/material/useScrollTrigger';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nfunction ElevationScroll(props) {\r\n  const { children, window } = props;\r\n\r\n  const trigger = useScrollTrigger({\r\n    disableHysteresis: true,\r\n    threshold: 0,\r\n    target: window ? window() : undefined,\r\n  });\r\n\r\n  return React.cloneElement(children, {\r\n    elevation: trigger ? 4 : 0,\r\n  });\r\n}\r\n\r\nElevationScroll.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  window: PropTypes.func,\r\n};\r\nexport default ElevationScroll;","import {\r\n  AppBar,\r\n  Typography,\r\n  Box,\r\n  Toolbar,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  IconButton,\r\n  Drawer,\r\n} from '@mui/material';\r\nimport React, { useState, useEffect } from 'react';\r\nimport ElevationScroll from './ElevationScroll';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport useStyles from '../utils/muiStyles';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { showToast } from '../utils/functions';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Nav = (props) => {\r\n  const classes = useStyles();\r\n  const [mobileMenu, setMobileMenu] = useState(false);\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const user = useSelector((state) => state.user.user);\r\n  const navigate = useNavigate();\r\n\r\n  const toggleDrawer = (open) => (event) => {\r\n    if (\r\n      event.type === 'keydown' &&\r\n      (event.key === 'Tab' || event.key === 'Shift')\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setMobileMenu(open);\r\n  };\r\n\r\n  useEffect(() => {\r\n    user.id ? setLoggedIn(true) : setLoggedIn(false);\r\n  }, [user.id]);\r\n\r\n  const signOut = () => {\r\n    window.location.reload(false);\r\n    showToast('success', 'Goodbye!👋');\r\n  };\r\n\r\n  const navigate_to_profile = () => {\r\n    navigate('/profile', {state : {source : 'from_dashboard'}});\r\n  }\r\n\r\n  const navigate_to_dashboard = () => {\r\n    navigate('/dashboard');\r\n  }\r\n\r\n  const list = (anchor) => (\r\n    <Box\r\n      sx={{ width: 250 }}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(false)}\r\n      onKeyDown={toggleDrawer(false)}\r\n    >\r\n      <List>\r\n        {loggedIn ? (\r\n          <ListItem button onClick={() => signOut()}>\r\n            <ListItemText primary=\"Sign Out\" />\r\n          </ListItem>\r\n        ) : (\r\n          <Link to=\"/login\">\r\n            <ListItem button>\r\n              <ListItemText primary=\"Log in\" />\r\n            </ListItem>\r\n          </Link>\r\n        )}\r\n      </List>\r\n    </Box>\r\n  );\r\n\r\n  const theme = useTheme();\r\n  const matches = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n  return (\r\n    <Box sx={{ marginBottom: '70px' }}>\r\n      <ElevationScroll {...props}>\r\n        <AppBar>\r\n          <Toolbar className={classes.toolBar}>\r\n            {loggedIn ? (\r\n                <Link to=\"/dashboard\">\r\n                  <Typography variant=\"h6\" className={classes.logo}>\r\n                    Invoicer\r\n                  </Typography>\r\n                </Link>):(\r\n                <Link to=\"/\">\r\n                  <Typography variant=\"h6\" className={classes.logo}>\r\n                    Invoicer\r\n                  </Typography>\r\n                </Link>\r\n            )}\r\n\r\n            {matches ? (\r\n              <Box>\r\n                <IconButton\r\n                  size=\"large\"\r\n                  edge=\"end\"\r\n                  color=\"inherit\"\r\n                  aria-label=\"menu\"\r\n                  onClick={toggleDrawer(true)}\r\n                >\r\n                  <MenuIcon className={classes.menuIcon} fontSize=\"large\" />\r\n                </IconButton>\r\n\r\n                <Drawer\r\n                  anchor=\"right\"\r\n                  open={mobileMenu}\r\n                  onClose={toggleDrawer(false)}\r\n                >\r\n                  {list('right')}\r\n                </Drawer>\r\n              </Box>\r\n            ) : (\r\n              <Box\r\n                sx={{\r\n                  display: 'flex',\r\n                  justifyContent: 'space-between',\r\n                  flexGrow: '0.05',\r\n                }}\r\n              >\r\n                {loggedIn ? (\r\n                  <>\r\n                    <Typography\r\n                      className={classes.link}\r\n                      onClick={() => navigate_to_dashboard()}\r\n                    >\r\n                      Home\r\n                    </Typography>\r\n                    <Typography\r\n                      className={classes.link}\r\n                      onClick={() => navigate_to_profile()}\r\n                    >\r\n                      Profile\r\n                    </Typography>\r\n                    <Typography\r\n                      className={classes.link}\r\n                      onClick={() => signOut()}\r\n                    >\r\n                      Sign Out\r\n                    </Typography>\r\n                  </>\r\n                ) : (\r\n                  <Link to=\"/login\">\r\n                    <Typography className={classes.link}>Log in</Typography>\r\n                  </Link>\r\n                )}\r\n              </Box>\r\n            )}\r\n          </Toolbar>\r\n        </AppBar>\r\n      </ElevationScroll>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Nav;","import React from 'react';\r\n\r\nconst CreateInvoiceTable = ({ itemList, deleteItem, cgstAmount,sgstAmount,totalAmount,grandTotal,priceRoundoff, }) => {\r\n  return (\r\n    <div className=\"w-full overflow-auto\">\r\n      <table>\r\n      <thead>\r\n        <th>Name</th>\r\n        <th>Quantity</th>\r\n        <th>Rate/unit</th>\r\n        <th>Amount</th>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {itemList.map((item) => (\r\n          <tr key={item.itemName}>\r\n            <td className=\"text-sm\">{item.itemName}</td>\r\n            <td className=\"text-sm\">{item.itemRate}</td>\r\n            <td className=\"text-sm\">{item.itemQuantity}</td>\r\n            <td className=\"text-sm text-right\">{item.itemCost}</td>\r\n            <td> \r\n              <svg onClick={()=>deleteItem(item.itemName)} xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 text-red-500 cursor-pointer\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth={2}><path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"/></svg>\r\n            </td>\r\n          </tr>\r\n        ))}\r\n        <TableRow name=\"Total Amount\" value={totalAmount} classname=\"ms\" />\r\n        <TableRow name=\"CGST\" value={cgstAmount} classname=\"ms\" />\r\n        <TableRow name=\"SGST\" value={sgstAmount} classname=\"ms\" />\r\n        <TableRow name=\"Roundoff\" value={priceRoundoff} classname=\"ms\" />\r\n        <TableRow name=\"Grand Total\" value={grandTotal} classname=\"ms\" />\r\n      </tbody>\r\n    </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst TableRow = ({name,value, classname}) => {\r\n  return(\r\n    <tr>\r\n      <td colSpan=\"3\" className=\"text-right font-bold text-xs\">\r\n        {name}\r\n      </td>\r\n      <td className={`font-bold uppercase text-xs text-right ${classname}`}>\r\n        {value}\r\n      </td>\r\n    </tr>\r\n  )\r\n}\r\n\r\nexport default CreateInvoiceTable;","import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useParams } from 'react-router-dom';\r\nimport CreateInvoiceTable from '../components/CreateInvoiceTable';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setInvoice } from '../redux/invoice';\r\nimport { addDoc, collection, serverTimestamp, updateDoc, doc, onSnapshot } from '@firebase/firestore';\r\nimport db from '../firebase';\r\nimport Nav from '../components/Nav';\r\nimport { showToast, getRoundValue } from '../utils/functions';\r\nimport Loading from '../components/Loading';\r\n\r\nconst CreateInvoice = () => {\r\n\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [invoiceNo, setInvoiceNo] = useState('');\r\n  const [customerName, setCustomerName] = useState('');\r\n  const [customerAddress, setCustomerAddress] = useState('');\r\n  const [customerCity, setCustomerCity] = useState('');\r\n  const [customerDist, setCustomerDist] = useState('');\r\n  const [customerState, setCustomerState] = useState('');\r\n  const [customerPincode, setCustomerPincode] = useState('');\r\n  const [customerGSTN, setCustomerGSTN] = useState('');\r\n  const [customerEmail, setCustomerEmail] = useState('');\r\n  const [customerPhone, setCustomerPhone] = useState('');\r\n  const [currency, setCurrency] = useState('INR');\r\n  const [customerEway, setCustomerEway] = useState('');\r\n  const [customerBillDate, setCustomerBillDate] = useState('');\r\n  const [customerDestination, setCustomerDestination] = useState('');\r\n  const [customerVehicleNo, setCustomerVehicleNo] = useState('');\r\n  const [customerDispatchedThrough, setCustomerDispatchedThrough] = useState('');\r\n  const [customerDeliveryTerms, setCustomerDeliveryTerms] = useState('');\r\n  \r\n  const [CGST, setCGST] = useState(2.5);\r\n  const [SGST, setSGST] = useState(2.5);\r\n  const [cgstAmount, setCgstAmount] = useState(0);\r\n  const [sgstAmount, setSgstAmount] = useState(0);\r\n  const [totalAmount, setTotalAmount] = useState(0);\r\n  const [grandTotal, setGrandTotal] = useState(0);\r\n  const [priceRoundoff, setpriceRoundoff] = useState(0.0);\r\n  \r\n  const [itemName, setItemName] = useState('');\r\n  const [itemQuantity, setItemQuantity] = useState(1);\r\n  const [itemCode, setItemCode] = useState('');\r\n  const [itemUnit, setItemUnit] = useState('');\r\n  const [itemCost, setItemCost] = useState(0);\r\n  const [itemRate, setItemRate] = useState(0);\r\n  const [itemRatewithoutGST, setItemRatewithoutGST] = useState(0);\r\n  const [itemList, setItemList] = useState([]);\r\n\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.user.user);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n\r\n  let params = useParams();\r\n  useEffect(() => {\r\n    if (!user.id) return navigate('/login');\r\n    setLoading(false);\r\n  }, [navigate, user.id]);\r\n\r\n  useEffect(() => {\r\n    if (!user.id) return navigate('/login');\r\n    try {\r\n      \r\n      if (params.id) {\r\n        const unsub = onSnapshot(doc(db, 'invoices', params.id), (doc) => {\r\n          setIsEdit(true)\r\n          setItemList(doc.data().itemList)\r\n          setInvoiceNo(doc.data().invoiceNo)\r\n          setCustomerName(doc.data().customerName)\r\n          setCustomerAddress(doc.data().customerAddress)\r\n          setCustomerCity(doc.data().customerCity)\r\n          setCustomerDist(doc.data().customerDist)\r\n          setCustomerState(doc.data().customerState)\r\n          setCustomerPincode(doc.data().customerPincode)\r\n          setCustomerGSTN(doc.data().customerGSTN)\r\n          setCustomerEmail(doc.data().customerEmail)\r\n          setCustomerPhone(doc.data().customerPhone)\r\n          setCurrency(doc.data().currency)\r\n          setCustomerEway(doc.data().customerEway)\r\n          setCustomerBillDate(doc.data().customerBillDate)\r\n          setCustomerDestination(doc.data().customerDestination)\r\n          setCustomerVehicleNo(doc.data().customerVehicleNo)\r\n          setCustomerDispatchedThrough(doc.data().customerDispatchedThrough)\r\n          setCustomerDeliveryTerms(doc.data().customerDeliveryTerms)\r\n        });\r\n        setLoading(false);\r\n        return () => unsub();\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  },[]);\r\n\r\n  useEffect(() => {\r\n    setItemCost(getRoundValue(itemQuantity*itemRatewithoutGST))\r\n  }, [itemRatewithoutGST, itemQuantity]);\r\n\r\n  useEffect(() => {\r\n    let total_amount=0;\r\n    itemList.forEach(x => {\r\n      total_amount = total_amount + x.itemCost;\r\n    });\r\n\r\n    console.log(total_amount, getRoundValue(4));\r\n    setTotalAmount(getRoundValue(total_amount))\r\n    setCgstAmount(getRoundValue(total_amount*CGST/100))\r\n    setSgstAmount(getRoundValue(total_amount*SGST/100))\r\n    let grandtotal = total_amount+getRoundValue(total_amount*CGST/100)+getRoundValue(total_amount*SGST/100);\r\n    setpriceRoundoff((grandtotal-Math.floor(grandtotal)).toFixed(2))\r\n    setGrandTotal((Math.floor(grandtotal)).toFixed(2))\r\n  }, [itemList]);\r\n\r\n  const deleteItem = (name) => {\r\n    try{\r\n      if(itemList.length > 0){\r\n        const filteredList = itemList.filter((item) => item.itemName !== name);\r\n        setItemList(filteredList)\r\n      }\r\n    }\r\n    catch(e){\r\n      console.log('error while deleting item', e);\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (itemName.trim() && itemCost > 0 && itemQuantity >= 1) {\r\n      setItemList([\r\n        ...itemList,\r\n        {\r\n          itemName,\r\n          itemCost,\r\n          itemQuantity,\r\n          itemCode,\r\n          itemUnit,\r\n          itemRatewithoutGST,\r\n          itemRate,\r\n        },\r\n      ]);\r\n    }\r\n\r\n    setItemName('');\r\n    setItemCode('')\r\n    setItemCost(0);\r\n    setItemQuantity(1);\r\n    setItemUnit('')\r\n    setItemRate(0);\r\n    setItemRatewithoutGST(0);\r\n  };\r\n\r\n  const saveInvoice = async (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      setInvoice({\r\n        customerName,\r\n        customerAddress,\r\n        customerCity,\r\n        customerEmail,\r\n        itemList,\r\n        currency,\r\n      })\r\n    );\r\n\r\n    await addDoc(collection(db, 'invoices'), {\r\n      user_id: user.id,\r\n      created_timestamp: serverTimestamp(),\r\n      updated_timestamp: serverTimestamp(),\r\n      invoiceNo,\r\n      customerName,customerAddress,customerCity,customerDist,customerState,customerPincode,customerGSTN,customerEmail,customerPhone,currency,\r\n      customerEway,customerBillDate,customerDestination,customerVehicleNo,customerDispatchedThrough,customerDeliveryTerms,itemList,\r\n      CGST,SGST,cgstAmount,sgstAmount,totalAmount,grandTotal,priceRoundoff,\r\n    })\r\n      .then(() => {\r\n        showToast('success', 'Invoice created!📜');\r\n      })\r\n      .then(() => navigate('/dashboard'))\r\n      .catch((err) => {\r\n        showToast('error', 'Try again! Invoice not created!😭');\r\n      });\r\n  };\r\n\r\n  const updateInvoice = async (e) => {\r\n    e.preventDefault();\r\n    setItemList([...itemList])\r\n    dispatch(\r\n      setInvoice({\r\n        customerName,\r\n        customerAddress,\r\n        customerCity,\r\n        customerEmail,\r\n        itemList,\r\n        currency,\r\n      })\r\n    );\r\n    await updateDoc(doc(db, 'invoices', params.id), {\r\n      user_id: user.id,\r\n      updated_timestamp: serverTimestamp(),\r\n      invoiceNo,\r\n      customerName,customerAddress,customerCity,customerDist,customerState,customerPincode,customerGSTN,customerEmail,customerPhone,currency,\r\n      customerEway,customerBillDate,customerDestination,customerVehicleNo,customerDispatchedThrough,customerDeliveryTerms,itemList,\r\n      CGST,SGST,cgstAmount,sgstAmount,totalAmount,grandTotal,priceRoundoff,\r\n    }).then(() => {\r\n      showToast('success', 'Invoice updated!📜');\r\n    })\r\n    .catch((err) => {\r\n      showToast('error', 'Try again! Invoice not updated!😭');\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Loading />\r\n      ) : (\r\n        <div>\r\n          <Nav />\r\n          <div className=\"w-full p-3 md:w-2/3 shadow-xl mx-auto mt-8 rounded  my-8 md:p-8\">\r\n            <h3 className=\"text-center font-bold text-xl mb-4\">\r\n              Create an invoice\r\n            </h3>\r\n\r\n            <form\r\n              className=\"w-full mx-auto flex flex-col\"\r\n              onSubmit={isEdit?updateInvoice: saveInvoice}\r\n            >\r\n              <label htmlFor=\"invoiceNo\" className=\"text-sm\">\r\n                Invoice Number\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                required\r\n                name=\"invoiceNo\"\r\n                className=\"py-2 px-4 bg-gray-100 w-full mb-6\"\r\n                value={invoiceNo}\r\n                onChange={(e) => setInvoiceNo(e.target.value)}\r\n              />\r\n              <label htmlFor=\"customerName\" className=\"text-sm\">\r\n                Customer's Name\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                required\r\n                name=\"customerName\"\r\n                className=\"py-2 px-4 bg-gray-100 w-full mb-6\"\r\n                value={customerName}\r\n                onChange={(e) => setCustomerName(e.target.value)}\r\n              />\r\n\r\n              <div className=\"flex items-end space-x-3\">\r\n                <div className=\"flex flex-col w-1/2\">\r\n                  <label htmlFor=\"customerAddress\" className=\"text-sm\">\r\n                    Customer's Address\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    required\r\n                    name=\"customerAddress\"\r\n                    className=\"py-2 px-4 bg-gray-100 w-full mb-6\"\r\n                    value={customerAddress}\r\n                    onChange={(e) => setCustomerAddress(e.target.value)}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"flex flex-col w-1/2\">\r\n                  <label htmlFor=\"customerCity\" className=\"text-sm\">\r\n                    City\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    required\r\n                    name=\"customerCity\"\r\n                    className=\"py-2 px-4 bg-gray-100 w-full mb-6\"\r\n                    value={customerCity}\r\n                    onChange={(e) => setCustomerCity(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"flex items-end space-x-3\">\r\n                <div className=\"flex flex-col w-1/2\">\r\n                  <label htmlFor=\"customerDist\" className=\"text-sm\">\r\n                    District\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    required\r\n                    name=\"customerDist\"\r\n                    className=\"py-2 px-4 bg-gray-100 w-full mb-6\"\r\n                    value={customerDist}\r\n                    onChange={(e) => setCustomerDist(e.target.value)}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"flex flex-col w-1/2\">\r\n                  <label htmlFor=\"customerState\" className=\"text-sm\">\r\n                    State\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    required\r\n                    name=\"customerState\"\r\n                    className=\"py-2 px-4 bg-gray-100 w-full mb-6\"\r\n                    value={customerState}\r\n                    onChange={(e) => setCustomerState(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"flex items-end space-x-3\">\r\n                <div className=\"flex flex-col w-1/2\">\r\n                  <label htmlFor=\"customerPincode\" className=\"text-sm\">\r\n                    PINCODE\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    required\r\n                    name=\"customerPincode\"\r\n                    className=\"py-2 px-4 bg-gray-100 w-full mb-6\"\r\n                    value={customerPincode}\r\n                    onChange={(e) => setCustomerPincode(e.target.value)}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"flex flex-col w-1/2\">\r\n                  <label htmlFor=\"customerPhone\" className=\"text-sm\">\r\n                    Phone\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    required\r\n                    name=\"customerPhone\"\r\n                    className=\"py-2 px-4 bg-gray-100 w-full mb-6\"\r\n                    value={customerPhone}\r\n                    onChange={(e) => setCustomerPhone(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <label htmlFor=\"customerGSTN\" className=\"text-sm\">\r\n                Customer's GSTN\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                required\r\n                name=\"customerGSTN\"\r\n                className=\"py-2 px-4 bg-gray-100 w-full mb-6\"\r\n                value={customerGSTN}\r\n                onChange={(e) => setCustomerGSTN(e.target.value)}\r\n              />\r\n\r\n              <div className=\"flex items-center space-x-4\">\r\n                <div className=\"flex flex-col w-2/3\">\r\n                  <label htmlFor=\"customerEmail\" className=\"text-sm\">\r\n                    Customer's Email\r\n                  </label>\r\n                  <input\r\n                    type=\"email\"\r\n                    required\r\n                    name=\"customerEmail\"\r\n                    className=\"py-2 px-4 bg-gray-100 w-full mb-6\"\r\n                    value={customerEmail}\r\n                    onChange={(e) => setCustomerEmail(e.target.value)}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"flex flex-col w-1/3\">\r\n                  <label htmlFor=\"currency\" className=\"text-sm\">\r\n                    Currency\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    required\r\n                    maxLength={3}\r\n                    minLength={3}\r\n                    name=\"currency\"\r\n                    className=\"py-2 px-4 bg-gray-100 w-full mb-6\"\r\n                    value={currency}\r\n                    onChange={(e) => setCurrency(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"w-full flex justify-between flex-col\">\r\n                <h3 className=\"my-4 font-bold \">Tracking Details</h3>\r\n                <div className=\"flex items-end space-x-3\">\r\n                  <div className=\"flex flex-col w-2/3\">\r\n                    <label htmlFor=\"customerEway\" className=\"text-sm\">\r\n                      Eway\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      required\r\n                      name=\"customerEway\"\r\n                      className=\"py-2 px-4 bg-gray-100 w-full mb-6\"\r\n                      value={customerEway}\r\n                      onChange={(e) => setCustomerEway(e.target.value)}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"flex flex-col w-1/3\">\r\n                    <label htmlFor=\"customerBillDate\" className=\"text-sm\">\r\n                      Bill Date \r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      required\r\n                      name=\"customerBillDate\"\r\n                      className=\"py-2 px-4 bg-gray-100 w-full mb-6\"\r\n                      value={customerBillDate}\r\n                      onChange={(e) => setCustomerBillDate(e.target.value)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex items-end space-x-3\">\r\n                  <div className=\"flex flex-col w-1/2\">\r\n                    <label htmlFor=\"customerDestination\" className=\"text-sm\">\r\n                      Destination\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      required\r\n                      name=\"customerDestination\"\r\n                      className=\"py-2 px-4 bg-gray-100 w-full mb-6\"\r\n                      value={customerDestination}\r\n                      onChange={(e) => setCustomerDestination(e.target.value)}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"flex flex-col w-1/2\">\r\n                    <label htmlFor=\"customerVehicleNo\" className=\"text-sm\">\r\n                      Vehicle Number\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      required\r\n                      name=\"customerVehicleNo\"\r\n                      className=\"py-2 px-4 bg-gray-100 w-full mb-6\"\r\n                      value={customerVehicleNo}\r\n                      onChange={(e) => setCustomerVehicleNo(e.target.value)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex items-end space-x-3\">\r\n                  <div className=\"flex flex-col w-1/2\">\r\n                    <label htmlFor=\"customerDispatchedThrough\" className=\"text-sm\">\r\n                      Dispatched Through\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      required\r\n                      name=\"customerDispatchedThrough\"\r\n                      className=\"py-2 px-4 bg-gray-100 w-full mb-6\"\r\n                      value={customerDispatchedThrough}\r\n                      onChange={(e) => setCustomerDispatchedThrough(e.target.value)}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"flex flex-col w-1/2\">\r\n                    <label htmlFor=\"customerDeliveryTerms\" className=\"text-sm\">\r\n                      Delivery Terms\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      required\r\n                      name=\"customerDeliveryTerms\"\r\n                      className=\"py-2 px-4 bg-gray-100 w-full mb-6\"\r\n                      value={customerDeliveryTerms}\r\n                      onChange={(e) => setCustomerDeliveryTerms(e.target.value)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"w-full flex justify-between flex-col\">\r\n                <h3 className=\"my-4 font-bold \">Items List</h3>\r\n\r\n                <div className=\"flex items-end space-x-3\">\r\n                  <div className=\"flex flex-col w-1/2\">\r\n                    <label htmlFor=\"itemName\" className=\"text-sm\">\r\n                      Item Name\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"itemName\"\r\n                      className=\"py-2 px-4 mb-6 bg-gray-100 w-full\"\r\n                      value={itemName}\r\n                      onChange={(e) => setItemName(e.target.value)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"flex flex-col w-1/2\">\r\n                    <label htmlFor=\"itemCode\" className=\"text-sm\">\r\n                      Item Code\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"itemCode\"\r\n                      className=\"py-2 px-4 mb-6 bg-gray-100\"\r\n                      value={itemCode}\r\n                      onChange={(e) => setItemCode(e.target.value)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"flex space-x-3\">\r\n                  <div className=\"flex flex-col justify-center w-1/3\">\r\n                    <label htmlFor=\"itemQuantity\" className=\"text-sm\">\r\n                      Quantity\r\n                    </label>\r\n                    <input\r\n                      type=\"number\"\r\n                      name=\"itemQuantity\"\r\n                      className=\"py-2 px-4 mb-6 bg-gray-100 w-full\"\r\n                      value={itemQuantity}\r\n                      onChange={(e) => setItemQuantity(e.target.value)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"flex flex-col w-1/3\">\r\n                    <label htmlFor=\"itemUnit\" className=\"text-sm\">\r\n                      Unit\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"itemUnit\"\r\n                      className=\"py-2 px-4 mb-6 bg-gray-100 w-full\"\r\n                      value={itemUnit}\r\n                      onChange={(e) => setItemUnit(e.target.value)}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"flex flex-col w-1/3\">\r\n                    <label htmlFor=\"itemRate\" className=\"text-sm\">\r\n                      Rate with GST\r\n                    </label>\r\n                    <input\r\n                      type=\"number\"\r\n                      name=\"itemRate\"\r\n                      className=\"py-2 px-4 mb-6 bg-gray-100 w-full\"\r\n                      value={itemRate}\r\n                      onChange={(e) => {setItemRate(e.target.value); setItemRatewithoutGST((e.target.value*100/(CGST+SGST+100)))}}\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"flex space-x-3\">\r\n                  <div className=\"flex flex-col justify-center w-1/3\">\r\n                    <label htmlFor=\"SGST\" className=\"text-sm\">\r\n                      SGST (%)\r\n                    </label>\r\n                    <input\r\n                      type=\"number\"\r\n                      name=\"SGST\"\r\n                      disabled\r\n                      className=\"py-2 px-4 mb-6 bg-gray-100 w-full\"\r\n                      value={SGST}\r\n                      onChange={(e) => setSGST(e.target.value)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"flex flex-col w-1/3\">\r\n                    <label htmlFor=\"CGST\" className=\"text-sm\">\r\n                      CGST (%)\r\n                    </label>\r\n                    <input\r\n                      type=\"number\"\r\n                      name=\"CGST\"\r\n                      disabled\r\n                      className=\"py-2 px-4 mb-6 bg-gray-100 w-full\"\r\n                      value={CGST}\r\n                      onChange={(e) => setCGST(e.target.value)}\r\n                      \r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"flex flex-col w-1/3\">\r\n                    <label htmlFor=\"itemRatewithoutGST\" className=\"text-sm\">\r\n                      Rate without GST\r\n                    </label>\r\n                    <input\r\n                      type=\"number\"\r\n                      name=\"itemRatewithoutGST\"\r\n                      className=\"py-2 px-4 mb-6 bg-gray-100 w-full\"\r\n                      value={itemRatewithoutGST}\r\n                      onChange={(e) => {setItemRatewithoutGST(e.target.value); setItemRate((e.target.value*(CGST+SGST+100)/100))}}\r\n                    />\r\n                  </div>\r\n\r\n                </div>\r\n                <div className=\"flex flex-col justify-center w-1/4\">\r\n                  <p className=\"text-sm\">Price</p>\r\n                  <p className=\"py-2 px-4 mb-6 bg-gray-100\">\r\n                    {Number(itemCost).toLocaleString('en-US')}\r\n                  </p>\r\n                </div>\r\n                \r\n                <button\r\n                  className=\"bg-blue-500 text-gray-100 w-[150px] p-3 rounded my-2\"\r\n                  onClick={handleSubmit}\r\n                >\r\n                  Add Item\r\n                </button>\r\n              </div>\r\n\r\n              {itemList[0] && \r\n                <CreateInvoiceTable \r\n                  itemList={itemList} \r\n                  cgstAmount={cgstAmount} \r\n                  sgstAmount={sgstAmount}\r\n                  totalAmount={totalAmount}\r\n                  grandTotal={grandTotal}\r\n                  priceRoundoff={priceRoundoff} \r\n                  deleteItem={deleteItem}\r\n                />\r\n              }\r\n\r\n              <button\r\n                className=\"bg-blue-800 text-gray-100 w-full p-5 rounded my-6\"\r\n                type=\"submit\"\r\n              >\r\n                {!isEdit?\"SAVE INVOICE\":\"UPDATE INVOICE\"}\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateInvoice;","import { toast } from 'react-toastify';\r\n\r\nexport const showToast = (type, message) => {\r\n    if(type === \"success\") {\r\n        toast.success(message, {\r\n            position: 'top-right',\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n          });\r\n    } else {\r\n        toast.error(message, {\r\n            position: 'top-right',\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n          });\r\n    }\r\n}\r\nexport const findGrandTotal = ({ itemList }, currency) => {\r\n    let total = 0;\r\n    for (let i = 0; i < itemList.length; i++) {\r\n      const amount = itemList[i].itemCost * itemList[i].itemQuantity;\r\n      total += amount;\r\n    }\r\n    return `${currency} ${total.toLocaleString('en-US')}`;\r\n  };\r\n\r\nexport const convertTimestamp = (timestamp) => {\r\n    const fireBaseTime = new Date(\r\n      timestamp.seconds * 1000 + timestamp.nanoseconds / 1000000\r\n    );\r\n    const day =\r\n      fireBaseTime.getDate() < 10\r\n        ? `0${fireBaseTime.getDate()}`\r\n        : fireBaseTime.getDate();\r\n    const month =\r\n      fireBaseTime.getMonth() < 10\r\n        ? `0${fireBaseTime.getMonth()}`\r\n        : fireBaseTime.getMonth();\r\n    const year = fireBaseTime.getFullYear();\r\n\r\n    return `${day}-${month}-${year}`;\r\n  }\r\n\r\nexport const createInvoiceID = (timestamp) => {\r\n  console.log(timestamp);\r\n  const fireBaseTime = new Date(\r\n    timestamp.seconds * 1000 + timestamp.nanoseconds / 1000000\r\n  );\r\n  const day =\r\n    fireBaseTime.getDate() < 10\r\n      ? `0${fireBaseTime.getDate()}`\r\n      : fireBaseTime.getDate();\r\n  const month =\r\n    fireBaseTime.getMonth() < 10\r\n      ? `0${fireBaseTime.getMonth()}`\r\n      : fireBaseTime.getMonth();\r\n  const year = fireBaseTime.getFullYear();\r\n  const hour =\r\n  fireBaseTime.getHours() < 10\r\n    ? `0${fireBaseTime.getHours()}`\r\n    : fireBaseTime.getHours();\r\n  const minute =\r\n  fireBaseTime.getMinutes() < 10\r\n    ? `0${fireBaseTime.getMinutes()}`\r\n    : fireBaseTime.getMinutes();\r\n  const second =\r\n    fireBaseTime.getSeconds() < 10\r\n    ? `0${fireBaseTime.getSeconds()}`\r\n    : fireBaseTime.getSeconds();\r\n\r\n  return `${second}${minute}${hour}${day}${month}/${year}`;\r\n}\r\n\r\nexport const getRoundValue = (num) => {\r\n  return parseFloat((Math.round(num * 100) / 100).toFixed(2))\r\n}","import { makeStyles } from '@mui/styles';\r\n\r\nconst styles = (theme) => {\r\n  return {\r\n    toolBar: {\r\n      height: '10vh',\r\n      display: 'flex',\r\n      justifyContent: 'space-between',\r\n      padding: '20px',\r\n      backgroundColor: 'white',\r\n    },\r\n    logo: {\r\n      color: \"#041562\",\r\n      cursor: 'pointer',\r\n    },\r\n    inputField: {\r\n      marginBottom: '20px !important',\r\n      width: \"100%\"\r\n    },\r\n    link: {\r\n      color: \"#000\",\r\n      cursor: \"pointer\"\r\n    },\r\n    menuIcon: {\r\n      color: '#000',\r\n    },\r\n    heroContainer: {\r\n      width: \"100%\", \r\n      minHeight: \"80vh\", \r\n      display: \"flex\", \r\n      flexDirection: \"column\", \r\n      alignItems: \"center\", \r\n      justifyContent: \"center\", \r\n      textAlign: \"center\"\r\n    },\r\n    heroText: {\r\n      marginBottom: \"20px !important\", \r\n      fontWeight: \"bolder\", \r\n      color: \"#041562\"\r\n    },\r\n    heroSubtitle: {\r\n      marginBottom: \"30px !important\", \r\n      color: \"#11468F\", \r\n      opacity: \"0.8\"\r\n    }, \r\n    authGridContainer: {\r\n      width: \"100%\", \r\n      height: \"100%\"\r\n    }, \r\n    authGridImage: {\r\n      backgroundColor: \"#11468F\", \r\n      display: \"flex\", \r\n      alignItems: \"center\", \r\n      justifyContent: \"center\", \r\n      minHeight: \"100vh\", \r\n      padding:\"5px\",\r\n      [theme.breakpoints.between('xs', 'md')]: {\r\n        display: \"none\"\r\n      }\r\n    }, \r\n    authSvg: {\r\n      width: \"100%\"\r\n    },\r\n    authForm: {\r\n      minHeight: \"100vh\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n      flexDirection: \"column !important\",\r\n    },\r\n    authFormContainer: { \r\n      padding: \"10px 15px 0px 15px\",\r\n    [theme.breakpoints.between('xs', 'sm')]: {\r\n      padding: \"10px 15px 0px 15px\",\r\n    }}\r\n  };\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\nexport default useStyles;"],"names":["props","children","window","trigger","useScrollTrigger","disableHysteresis","threshold","target","undefined","React","elevation","classes","useStyles","useState","mobileMenu","setMobileMenu","loggedIn","setLoggedIn","user","useSelector","state","navigate","useNavigate","toggleDrawer","open","event","type","key","useEffect","id","signOut","location","reload","showToast","theme","useTheme","matches","useMediaQuery","breakpoints","down","Box","sx","marginBottom","AppBar","Toolbar","className","toolBar","to","Typography","variant","logo","IconButton","size","edge","color","onClick","Menu","menuIcon","fontSize","Drawer","anchor","onClose","width","role","onKeyDown","List","ListItem","button","ListItemText","primary","display","justifyContent","flexGrow","link","source","TableRow","name","value","classname","colSpan","itemList","deleteItem","cgstAmount","sgstAmount","totalAmount","grandTotal","priceRoundoff","map","item","itemName","itemRate","itemQuantity","itemCost","xmlns","fill","viewBox","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","isEdit","setIsEdit","invoiceNo","setInvoiceNo","customerName","setCustomerName","customerAddress","setCustomerAddress","customerCity","setCustomerCity","customerDist","setCustomerDist","customerState","setCustomerState","customerPincode","setCustomerPincode","customerGSTN","setCustomerGSTN","customerEmail","setCustomerEmail","customerPhone","setCustomerPhone","currency","setCurrency","customerEway","setCustomerEway","customerBillDate","setCustomerBillDate","customerDestination","setCustomerDestination","customerVehicleNo","setCustomerVehicleNo","customerDispatchedThrough","setCustomerDispatchedThrough","customerDeliveryTerms","setCustomerDeliveryTerms","CGST","setCGST","SGST","setSGST","setCgstAmount","setSgstAmount","setTotalAmount","setGrandTotal","setpriceRoundoff","setItemName","setItemQuantity","itemCode","setItemCode","itemUnit","setItemUnit","setItemCost","setItemRate","itemRatewithoutGST","setItemRatewithoutGST","setItemList","dispatch","useDispatch","loading","setLoading","params","useParams","unsub","onSnapshot","doc","db","data","error","console","getRoundValue","total_amount","forEach","x","log","grandtotal","Math","floor","toFixed","saveInvoice","e","preventDefault","setInvoice","addDoc","collection","user_id","created_timestamp","serverTimestamp","updated_timestamp","then","catch","err","updateInvoice","updateDoc","Loading","Nav","onSubmit","htmlFor","required","onChange","maxLength","minLength","disabled","Number","toLocaleString","trim","length","filteredList","filter","message","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","num","parseFloat","round","makeStyles","height","padding","backgroundColor","cursor","inputField","heroContainer","minHeight","flexDirection","alignItems","textAlign","heroText","fontWeight","heroSubtitle","opacity","authGridContainer","authGridImage","between","authSvg","authForm","authFormContainer"],"sourceRoot":""}