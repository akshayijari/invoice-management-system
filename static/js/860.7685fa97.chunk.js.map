{"version":3,"file":"static/js/860.7685fa97.chunk.js","mappings":"6QAsBA,MAlBA,SAAyBA,GACvB,IAAQC,EAAqBD,EAArBC,SAAUC,EAAWF,EAAXE,OAEZC,GAAUC,EAAAA,EAAAA,GAAiB,CAC/BC,mBAAmB,EACnBC,UAAW,EACXC,OAAQL,EAASA,SAAWM,IAG9B,OAAOC,EAAAA,aAAmBR,EAAU,CAClCS,UAAWP,EAAU,EAAI,GAE7B,E,yFCoJA,EA9IY,SAACH,GACX,IAAMW,GAAUC,EAAAA,EAAAA,KAChB,GAAoCC,EAAAA,EAAAA,WAAS,GAAM,eAA5CC,EAAU,KAAEC,EAAa,KAChC,GAAgCF,EAAAA,EAAAA,WAAS,GAAM,eAAxCG,EAAQ,KAAEC,EAAW,KACtBC,GAAOC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMF,KAAKA,IAAI,IAC7CG,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAACC,GAAI,OAAK,SAACC,IAEb,YAAfA,EAAMC,MACS,QAAdD,EAAME,KAA+B,UAAdF,EAAME,MAKhCZ,EAAcS,EAChB,CAAE,GAEFI,EAAAA,EAAAA,YAAU,WACRV,EAAKW,GAAKZ,GAAY,GAAQA,GAAY,EAC5C,GAAG,CAACC,EAAKW,KAET,IAAMC,EAAU,WACd5B,OAAO6B,SAASC,QAAO,IACvBC,EAAAA,EAAAA,IAAU,UAAW,uBACvB,EAiCMC,GAAQC,EAAAA,EAAAA,KACRC,GAAUC,EAAAA,EAAAA,GAAcH,EAAMI,YAAYC,KAAK,OAErD,OACE,SAACC,EAAA,EAAG,CAACC,GAAI,CAAEC,aAAc,QAAS,UAChC,SAAC,GAAe,kBAAK1C,GAAK,cACxB,SAAC2C,EAAA,EAAM,WACL,UAACC,EAAA,EAAO,CAACC,UAAWlC,EAAQmC,QAAQ,UACjC9B,GACG,SAAC,KAAI,CAAC+B,GAAG,aAAY,UACnB,SAACC,EAAA,EAAU,CAACC,QAAQ,KAAKJ,UAAWlC,EAAQuC,KAAK,SAAC,gBAIpD,SAAC,KAAI,CAACH,GAAG,IAAG,UACV,SAACC,EAAA,EAAU,CAACC,QAAQ,KAAKJ,UAAWlC,EAAQuC,KAAK,SAAC,eAMvDd,GACC,UAACI,EAAA,EAAG,YACF,SAACW,EAAA,EAAU,CACTC,KAAK,QACLC,KAAK,MACLC,MAAM,UACN,aAAW,OACXC,QAAShC,GAAa,GAAM,UAE5B,SAACiC,EAAA,EAAQ,CAACX,UAAWlC,EAAQ8C,SAAUC,SAAS,aAGlD,SAACC,EAAA,GAAM,CACLC,OAAO,QACPpC,KAAMV,EACN+C,QAAStC,GAAa,GAAO,UA1D3C,SAACiB,EAAA,EAAG,CACFC,GAAI,CAAEqB,MAAO,KACbC,KAAK,eACLR,QAAShC,GAAa,GACtByC,UAAWzC,GAAa,GAAO,UAE/B,SAAC0C,EAAA,EAAI,UACFjD,GACC,SAACkD,EAAA,GAAQ,CAACC,QAAM,EAACZ,QAAS,kBAAMzB,GAAS,EAAC,UACxC,SAACsC,EAAA,EAAY,CAACC,QAAQ,gBAGxB,SAAC,KAAI,CAACtB,GAAG,SAAQ,UACf,SAACmB,EAAA,GAAQ,CAACC,QAAM,YACd,SAACC,EAAA,EAAY,CAACC,QAAQ,yBAkDtB,SAAC7B,EAAA,EAAG,CACFC,GAAI,CACF6B,QAAS,OACTC,eAAgB,gBAChBC,SAAU,QACV,SAEDxD,GACC,iCACE,SAACgC,EAAA,EAAU,CACTH,UAAWlC,EAAQ8D,KACnBlB,QAAS,WA/E3BlC,EAAS,aA+E+C,EAAC,SACxC,UAGD,SAAC2B,EAAA,EAAU,CACTH,UAAWlC,EAAQ8D,KACnBlB,QAAS,WAzF3BlC,EAAS,WAAY,CAACD,MAAQ,CAACsD,OAAS,mBAyFc,EAAC,SACtC,aAGD,SAAC1B,EAAA,EAAU,CACTH,UAAWlC,EAAQ8D,KACnBlB,QAAS,kBAAMzB,GAAS,EAAC,SAC1B,iBAKH,SAAC,KAAI,CAACiB,GAAG,SAAQ,UACf,SAACC,EAAA,EAAU,CAACH,UAAWlC,EAAQ8D,KAAK,SAAC,wBAUzD,C,kKCuPA,UApYqB,SAACE,GACpBC,QAAQC,IAAI,KAAMF,GAClB,IAAMzD,GAAOC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMF,KAAKA,IAAI,IACnD,GAAwCL,EAAAA,EAAAA,UAAS,IAAG,eAA7CiE,EAAY,KAAEC,EAAe,KACpC,GAA8ClE,EAAAA,EAAAA,UAAS,IAAG,eAAnDmE,EAAe,KAAEC,EAAkB,KAC1C,GAAwCpE,EAAAA,EAAAA,UAAS,IAAG,eAA7CqE,EAAY,KAAEC,EAAe,KACpC,GAA0CtE,EAAAA,EAAAA,UAAS,IAAG,eAA/CuE,EAAa,KAAEC,EAAgB,KACtC,GAA8CxE,EAAAA,EAAAA,UAAS,IAAG,eAAnDyE,EAAe,KAAEC,EAAkB,KAC1C,GAAwC1E,EAAAA,EAAAA,UAAS,IAAG,eAA7C2E,EAAY,KAAEC,EAAe,KACpC,GAAsC5E,EAAAA,EAAAA,UAAS,IAAG,eAA3C6E,EAAW,KAAEC,EAAc,KAClC,GAA0C9E,EAAAA,EAAAA,UAAS,IAAG,eAA/C+E,EAAa,KAAEC,EAAgB,KACtC,GAAgChF,EAAAA,EAAAA,UAAS,IAAG,eAArCiF,EAAQ,KAAEC,EAAW,KAC5B,GAAgClF,EAAAA,EAAAA,UAAS,IAAG,eAArCmF,EAAQ,KAAEC,GAAW,KAC5B,IAAoCpF,EAAAA,EAAAA,UAAS,IAAG,iBAAzCqF,GAAU,MAAEC,GAAa,MAChC,IAAwCtF,EAAAA,EAAAA,UAAS,IAAG,iBAA7CuF,GAAY,MAAEC,GAAe,MACpC,IAAwCxF,EAAAA,EAAAA,UAAS,IAAG,iBAA7CyF,GAAY,MAAEC,GAAe,MAEpC,IAAwB1F,EAAAA,EAAAA,UACtB,gEACD,iBAFMqC,GAAI,MAAEsD,GAAO,MAIdnF,IAAWC,EAAAA,EAAAA,MACVF,IAASqF,EAAAA,EAAAA,MAATrF,MACP,IAA8BP,EAAAA,EAAAA,WAAS,GAAK,iBAArC6F,GAAO,MAAEC,GAAU,MAC1B,IAA8B9F,EAAAA,EAAAA,WAAS,GAAK,iBAArC+F,GAAO,MAAEC,GAAU,OAE1BjF,EAAAA,EAAAA,YAAU,WACR,IAAKV,EAAKW,GAAI,OAAOR,GAAS,UAC9B,IACE,IAAMyF,GAAIC,EAAAA,EAAAA,KACRC,EAAAA,EAAAA,IAAWC,EAAAA,GAAI,eACfC,EAAAA,EAAAA,IAAM,UAAW,KAAMhG,EAAKW,KAGxBsF,GAAcC,EAAAA,EAAAA,IAAWN,EAAC,yCAAE,WAAOO,GAAa,gFAW0B,OAVxEC,EAAW,GACjBD,EAAcE,SAAQ,SAACC,GACrBF,EAASG,KAAKD,EAAIE,OAAOC,KAC3B,IACAhB,IAAW,GACX/B,QAAQC,IAAI,mBAAoByC,EAASM,QACtCN,EAASM,OAAS,GAAIf,IAAW,GAChB,cAAhBzF,GAAMsD,QAA0B4C,EAASM,OAAS,GACpDvG,GAAS,cAELyF,GAAIC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,IAAWC,EAAAA,GAAI,eAAeC,EAAAA,EAAAA,IAAM,UAAW,KAAMhG,EAAKW,KAAK,EAAD,QAC5CgG,EAAAA,EAAAA,IAAQf,GAAG,KAAD,GAAtCgB,EAAmB,QACLP,SAAQ,SAACC,GAC3B5C,QAAQC,IAAI,UAAU2C,EAAI3F,GAAIiG,GAC9B,IAAMC,EAAMP,EAAIE,OAChB3C,EAAgBgD,EAAIjD,cACpBG,EAAmB8C,EAAI/C,iBACvBG,EAAgB4C,EAAI7C,cACpBG,EAAiB0C,EAAI3C,eACrBG,EAAmBwC,EAAIzC,iBACvBG,EAAgBsC,EAAIvC,cACpBG,EAAeoC,EAAIrC,aACnBG,EAAiBkC,EAAInC,eACrBG,EAAYgC,EAAIjC,UAChBG,GAAY8B,EAAI/B,UAChBG,GAAc4B,EAAI7B,YAClBG,GAAgB0B,EAAI3B,cACpBG,GAAgBwB,EAAIzB,aACtB,IAAG,4CACJ,mDA9B+B,IA+BhC,OAAO,kBAAMa,GAAc,CAG7B,CAFE,MAAOa,GACPpD,QAAQC,IAAImD,EACd,CACF,GAAG,CAAC3G,GAAUH,EAAKW,KAEnB,IAUMoG,GAAY,yCAAG,WAAOC,GAAC,gFAEY,GADvCA,EAAEC,iBACFvD,QAAQC,IAAI,iBAAkB+B,IAAS,UAIpCA,GAAQ,CAAC,EAAF,8BACSwB,EAAAA,EAAAA,KAAOpB,EAAAA,EAAAA,IAAWC,EAAAA,GAAI,cAAe,CACpDoB,QAASnH,EAAKW,GACdiD,aAAAA,EACAE,gBAAAA,EACAE,aAAAA,EACAE,cAAAA,EACAE,gBAAAA,EACAE,aAAAA,EACAE,YAAAA,EACAE,cAAAA,EACAE,SAAAA,EACAE,SAAAA,EACAE,WAAAA,GACAE,aAAAA,GACAE,aAAAA,KACC,KAAD,EAfFgC,EAAQ,8BAkBuE,OAAzEC,GAAKxB,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,IAAWC,EAAAA,GAAI,eAAeC,EAAAA,EAAAA,IAAM,UAAW,KAAMhG,EAAKW,KAAK,EAAD,SAC9CgG,EAAAA,EAAAA,IAAQU,GAAI,KAAD,GAG1C,OAHsB,OACLhB,SAAQ,SAACC,GAC1Bc,EAAWd,EAAI3F,EACjB,IAAE,WACI2G,EAAAA,EAAAA,KAAUhB,EAAAA,EAAAA,IAAIP,EAAAA,GAAI,aAAcqB,GAAW,CAC/CD,QAASnH,EAAKW,GACdiD,aAAAA,EACAE,gBAAAA,EACAE,aAAAA,EACAE,cAAAA,EACAE,gBAAAA,EACAE,aAAAA,EACAE,YAAAA,EACAE,cAAAA,EACAE,SAAAA,EACAE,SAAAA,EACAE,WAAAA,GACAE,aAAAA,GACAE,aAAAA,KACC,KAAD,GAG0D,GAAxDmC,GAAWC,EAAAA,EAAAA,IAAIC,EAAAA,GAAQ,cAAD,OAAgBL,EAAQ,WAEzC,iEAATpF,GAAuE,mCAEjE0F,EAAAA,EAAAA,IAAaH,EAAUvF,GAAM,YAAY2F,MAAI,uBAAC,0GACxBC,EAAAA,EAAAA,IAAeL,GAAU,KAAD,EAAjC,OAAXM,EAAW,iBACXP,EAAAA,EAAAA,KAAUhB,EAAAA,EAAAA,IAAIP,EAAAA,GAAI,aAAcqB,GAAW,CAC/CpF,KAAM6F,IACL,KAAD,GACF9G,EAAAA,EAAAA,IAAU,UAAW,kCAAkC,4CACtD,KAAD,GACFZ,GAAS,cAAc,wBAGvBA,GAAS,cAAc,0DAIzBuD,QAAQC,IAAI,EAAD,KACX5C,EAAAA,EAAAA,IAAU,QAAS,kEAAkE,0DAEtF,gBArEiB,sCAuElB,OACE,8BACGyE,IACC,SAAC,IAAO,KAER,4BACE,SAAC,IAAG,KACJ,iBAAK7D,UAAU,iEAAgE,WAC7E,eAAIA,UAAU,qCAAoC,SAAC,4BAInD,kBACEA,UAAU,+BACVmG,SAAUf,GAAa,WAEvB,kBAAOgB,QAAQ,eAAepG,UAAU,UAAS,SAAC,UAGlD,kBACEnB,KAAK,OACLwH,UAAQ,EACRrG,UAAU,uDACV8E,KAAK,eACLwB,MAAOrE,EACPsE,SAAU,SAAClB,GAAC,OAAKnD,EAAgBmD,EAAE3H,OAAO4I,MAAM,KAGlD,iBAAKtG,UAAU,2BAA0B,WACvC,iBAAKA,UAAU,sBAAqB,WAClC,kBAAOoG,QAAQ,kBAAkBpG,UAAU,UAAS,SAAC,aAGrD,kBACEnB,KAAK,OACLwH,UAAQ,EACRrG,UAAU,uDACV8E,KAAK,kBACLwB,MAAOnE,EACPoE,SAAU,SAAClB,GAAC,OAAKjD,EAAmBiD,EAAE3H,OAAO4I,MAAM,QAIvD,iBAAKtG,UAAU,sBAAqB,WAClC,kBAAOoG,QAAQ,eAAepG,UAAU,UAAS,SAAC,UAGlD,kBACEnB,KAAK,OACLwH,UAAQ,EACRrG,UAAU,uDACV8E,KAAK,eACLwB,MAAOjE,EACPkE,SAAU,SAAClB,GAAC,OAAK/C,EAAgB+C,EAAE3H,OAAO4I,MAAM,WAKtD,iBAAKtG,UAAU,2BAA0B,WACvC,iBAAKA,UAAU,sBAAqB,WAClC,kBAAOoG,QAAQ,gBAAgBpG,UAAU,UAAS,SAAC,WAGnD,kBACEnB,KAAK,OACLwH,UAAQ,EACRrG,UAAU,uDACV8E,KAAK,gBACLwB,MAAO/D,EACPgE,SAAU,SAAClB,GAAC,OAAK7C,EAAiB6C,EAAE3H,OAAO4I,MAAM,QAIrD,iBAAKtG,UAAU,sBAAqB,WAClC,kBAAOoG,QAAQ,kBAAkBpG,UAAU,UAAS,SAAC,aAGrD,kBACEnB,KAAK,OACLwH,UAAQ,EACRrG,UAAU,uDACV8E,KAAK,kBACLwB,MAAO7D,EACP8D,SAAU,SAAClB,GAAC,OAAK3C,EAAmB2C,EAAE3H,OAAO4I,MAAM,WAKzD,kBAAOF,QAAQ,eAAepG,UAAU,UAAS,SAAC,UAGlD,kBACEnB,KAAK,OACLwH,UAAQ,EACRrG,UAAU,uDACV8E,KAAK,eACLwB,MAAO3D,EACP4D,SAAU,SAAClB,GAAC,OAAKzC,EAAgByC,EAAE3H,OAAO4I,MAAM,KAGlD,eAAItG,UAAU,qCAAoC,SAAC,iCAGnD,kBAAOoG,QAAQ,cAAcpG,UAAU,UAAS,SAAC,yBAGjD,kBACEnB,KAAK,OACLwH,UAAQ,EACRrG,UAAU,uDACV8E,KAAK,cACLwB,MAAOzD,EACP0D,SAAU,SAAClB,GAAC,OAAKvC,EAAeuC,EAAE3H,OAAO4I,MAAM,KAGjD,iBAAKtG,UAAU,2BAA0B,WACvC,iBAAKA,UAAU,sBAAqB,WAClC,kBAAOoG,QAAQ,gBAAgBpG,UAAU,UAAS,SAAC,oBAGnD,kBACEnB,KAAK,SACLwH,UAAQ,EACRrG,UAAU,4CACV8E,KAAK,gBACLwB,MAAOvD,EACPwD,SAAU,SAAClB,GAAC,OAAKrC,EAAiBqC,EAAE3H,OAAO4I,MAAM,QAIrD,iBAAKtG,UAAU,sBAAqB,WAClC,kBAAOoG,QAAQ,WAAWpG,UAAU,UAAS,SAAC,eAG9C,kBACEnB,KAAK,OACLwH,UAAQ,EACRrG,UAAU,uDACV8E,KAAK,WACLwB,MAAOnD,EACPoD,SAAU,SAAClB,GAAC,OAAKjC,GAAYiC,EAAE3H,OAAO4I,MAAM,WAKlD,iBAAKtG,UAAU,2BAA0B,WACvC,iBAAKA,UAAU,sBAAqB,WAClC,kBAAOoG,QAAQ,WAAWpG,UAAU,UAAS,SAAC,eAG9C,kBACEnB,KAAK,SACLwH,UAAQ,EACRrG,UAAU,4CACV8E,KAAK,WACLwB,MAAOrD,EACPsD,SAAU,SAAClB,GAAC,OAAKnC,EAAYmC,EAAE3H,OAAO4I,MAAM,QAIhD,iBAAKtG,UAAU,sBAAqB,WAClC,kBAAOoG,QAAQ,aAAapG,UAAU,UAAS,SAAC,iBAGhD,kBACEnB,KAAK,OACLwH,UAAQ,EACRrG,UAAU,uDACV8E,KAAK,aACLwB,MAAOjD,GACPkD,SAAU,SAAClB,GAAC,OAAK/B,GAAc+B,EAAE3H,OAAO4I,MAAM,WAKpD,eAAItG,UAAU,qCAAoC,SAAC,wBAGnD,kBAAOoG,QAAQ,eAAepG,UAAU,UAAS,SAAC,kBAGlD,kBACEnB,KAAK,OACLwH,UAAQ,EACRrG,UAAU,uDACV8E,KAAK,eACLwB,MAAO/C,GACPgD,SAAU,SAAClB,GAAC,OAAK7B,GAAgB6B,EAAE3H,OAAO4I,MAAM,KAElD,kBAAOF,QAAQ,eAAepG,UAAU,UAAS,SAAC,+BAGlD,kBACEnB,KAAK,OACLwH,UAAQ,EACRrG,UAAU,uDACV8E,KAAK,eACLwB,MAAO7C,GACP8C,SAAU,SAAClB,GAAC,OAAK3B,GAAgB2B,EAAE3H,OAAO4I,MAAM,KAElD,iBAAKtG,UAAU,qCAAoC,WACjD,gBAAKA,UAAU,sBAAqB,UAClC,gBACEwG,IAAKnG,GACLoG,IAAI,OACJzG,UAAU,6BAId,iBAAKA,UAAU,uBAAsB,WACnC,kBAAOoG,QAAQ,OAAOpG,UAAU,eAAc,SAE1C,iEADDK,IAEC,iBAEJ,kBACExB,KAAK,OACL6H,OAAO,UACP1G,UAAU,uBACV8E,KAAK,OACLyB,SA7SO,SAAClB,GACxB,IAAMsB,EAAS,IAAIC,WACfvB,EAAE3H,OAAOmJ,MAAM,IACjBF,EAAOG,cAAczB,EAAE3H,OAAOmJ,MAAM,IAEtCF,EAAOI,OAAS,SAACC,GACfrD,GAAQqD,EAAYtJ,OAAOuJ,OAC7B,CACF,WA0SY,mBAAQjH,UAAU,oDAAmD,SAClE+D,GAAQ,mBAAmB,6BAQ5C,C,qCCzUMhG,GAAYmJ,E,QAAAA,IA5EH,SAAC7H,GACd,MAAO,CACLY,QAAS,CACPkH,OAAQ,OACR1F,QAAS,OACTC,eAAgB,gBAChB0F,QAAS,OACTC,gBAAiB,SAEnBhH,KAAM,CACJI,MAAO,UACP6G,OAAQ,WAEVC,WAAY,CACV1H,aAAc,kBACdoB,MAAO,QAETW,KAAM,CACJnB,MAAO,OACP6G,OAAQ,WAEV1G,SAAU,CACRH,MAAO,QAET+G,cAAe,CACbvG,MAAO,OACPwG,UAAW,OACXhG,QAAS,OACTiG,cAAe,SACfC,WAAY,SACZjG,eAAgB,SAChBkG,UAAW,UAEbC,SAAU,CACRhI,aAAc,kBACdiI,WAAY,SACZrH,MAAO,WAETsH,aAAc,CACZlI,aAAc,kBACdY,MAAO,UACPuH,QAAS,OAEXC,kBAAmB,CACjBhH,MAAO,OACPkG,OAAQ,QAEVe,eAAc,QACZb,gBAAiB,UACjB5F,QAAS,OACTkG,WAAY,SACZjG,eAAgB,SAChB+F,UAAW,QACXL,QAAQ,OACP/H,EAAMI,YAAY0I,QAAQ,KAAM,MAAQ,CACvC1G,QAAS,SAGb2G,QAAS,CACPnH,MAAO,QAEToH,SAAU,CACRZ,UAAW,QACXhG,QAAS,OACTkG,WAAY,SACZjG,eAAgB,SAChBgG,cAAe,qBAEjBY,mBAAkB,QAChBlB,QAAS,sBACV/H,EAAMI,YAAY0I,QAAQ,KAAM,MAAQ,CACvCf,QAAS,uBAGf,IAGA,K","sources":["components/ElevationScroll.js","components/Nav.js","pages/SetupProfile.js","utils/muiStyles.js"],"sourcesContent":["import useScrollTrigger from '@mui/material/useScrollTrigger';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nfunction ElevationScroll(props) {\r\n  const { children, window } = props;\r\n\r\n  const trigger = useScrollTrigger({\r\n    disableHysteresis: true,\r\n    threshold: 0,\r\n    target: window ? window() : undefined,\r\n  });\r\n\r\n  return React.cloneElement(children, {\r\n    elevation: trigger ? 4 : 0,\r\n  });\r\n}\r\n\r\nElevationScroll.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  window: PropTypes.func,\r\n};\r\nexport default ElevationScroll;","import {\r\n  AppBar,\r\n  Typography,\r\n  Box,\r\n  Toolbar,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  IconButton,\r\n  Drawer,\r\n} from '@mui/material';\r\nimport React, { useState, useEffect } from 'react';\r\nimport ElevationScroll from './ElevationScroll';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport useStyles from '../utils/muiStyles';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { showToast } from '../utils/functions';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Nav = (props) => {\r\n  const classes = useStyles();\r\n  const [mobileMenu, setMobileMenu] = useState(false);\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const user = useSelector((state) => state.user.user);\r\n  const navigate = useNavigate();\r\n\r\n  const toggleDrawer = (open) => (event) => {\r\n    if (\r\n      event.type === 'keydown' &&\r\n      (event.key === 'Tab' || event.key === 'Shift')\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setMobileMenu(open);\r\n  };\r\n\r\n  useEffect(() => {\r\n    user.id ? setLoggedIn(true) : setLoggedIn(false);\r\n  }, [user.id]);\r\n\r\n  const signOut = () => {\r\n    window.location.reload(false);\r\n    showToast('success', 'Goodbye!👋');\r\n  };\r\n\r\n  const navigate_to_profile = () => {\r\n    navigate('/profile', {state : {source : 'from_dashboard'}});\r\n  }\r\n\r\n  const navigate_to_dashboard = () => {\r\n    navigate('/dashboard');\r\n  }\r\n\r\n  const list = (anchor) => (\r\n    <Box\r\n      sx={{ width: 250 }}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(false)}\r\n      onKeyDown={toggleDrawer(false)}\r\n    >\r\n      <List>\r\n        {loggedIn ? (\r\n          <ListItem button onClick={() => signOut()}>\r\n            <ListItemText primary=\"Sign Out\" />\r\n          </ListItem>\r\n        ) : (\r\n          <Link to=\"/login\">\r\n            <ListItem button>\r\n              <ListItemText primary=\"Log in\" />\r\n            </ListItem>\r\n          </Link>\r\n        )}\r\n      </List>\r\n    </Box>\r\n  );\r\n\r\n  const theme = useTheme();\r\n  const matches = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n  return (\r\n    <Box sx={{ marginBottom: '70px' }}>\r\n      <ElevationScroll {...props}>\r\n        <AppBar>\r\n          <Toolbar className={classes.toolBar}>\r\n            {loggedIn ? (\r\n                <Link to=\"/dashboard\">\r\n                  <Typography variant=\"h6\" className={classes.logo}>\r\n                    Invoicer\r\n                  </Typography>\r\n                </Link>):(\r\n                <Link to=\"/\">\r\n                  <Typography variant=\"h6\" className={classes.logo}>\r\n                    Invoicer\r\n                  </Typography>\r\n                </Link>\r\n            )}\r\n\r\n            {matches ? (\r\n              <Box>\r\n                <IconButton\r\n                  size=\"large\"\r\n                  edge=\"end\"\r\n                  color=\"inherit\"\r\n                  aria-label=\"menu\"\r\n                  onClick={toggleDrawer(true)}\r\n                >\r\n                  <MenuIcon className={classes.menuIcon} fontSize=\"large\" />\r\n                </IconButton>\r\n\r\n                <Drawer\r\n                  anchor=\"right\"\r\n                  open={mobileMenu}\r\n                  onClose={toggleDrawer(false)}\r\n                >\r\n                  {list('right')}\r\n                </Drawer>\r\n              </Box>\r\n            ) : (\r\n              <Box\r\n                sx={{\r\n                  display: 'flex',\r\n                  justifyContent: 'space-between',\r\n                  flexGrow: '0.05',\r\n                }}\r\n              >\r\n                {loggedIn ? (\r\n                  <>\r\n                    <Typography\r\n                      className={classes.link}\r\n                      onClick={() => navigate_to_dashboard()}\r\n                    >\r\n                      Home\r\n                    </Typography>\r\n                    <Typography\r\n                      className={classes.link}\r\n                      onClick={() => navigate_to_profile()}\r\n                    >\r\n                      Profile\r\n                    </Typography>\r\n                    <Typography\r\n                      className={classes.link}\r\n                      onClick={() => signOut()}\r\n                    >\r\n                      Sign Out\r\n                    </Typography>\r\n                  </>\r\n                ) : (\r\n                  <Link to=\"/login\">\r\n                    <Typography className={classes.link}>Log in</Typography>\r\n                  </Link>\r\n                )}\r\n              </Box>\r\n            )}\r\n          </Toolbar>\r\n        </AppBar>\r\n      </ElevationScroll>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Nav;","import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { getDownloadURL, ref, uploadString } from '@firebase/storage';\r\nimport { storage } from '../firebase';\r\nimport {\r\n  addDoc,\r\n  updateDoc,\r\n  collection,\r\n  doc,\r\n  onSnapshot,\r\n  query,\r\n  where,\r\n  getDocs,\r\n} from '@firebase/firestore';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport db from '../firebase';\r\nimport Nav from '../components/Nav';\r\nimport Loading from '../components/Loading';\r\nimport { showToast } from '../utils/functions';\r\n\r\nconst SetupProfile = (aa) => {\r\n  console.log('aa', aa)\r\n  const user = useSelector((state) => state.user.user);\r\n  const [businessName, setBusinessName] = useState('');\r\n  const [businessAddress, setBusinessAddress] = useState('');\r\n  const [businessCity, setBusinessCity] = useState('');\r\n  const [businessState, setBusinessState] = useState('');\r\n  const [businessPincode, setBusinessPincode] = useState('');\r\n  const [businessGSTN, setBusinessGSTN] = useState('');\r\n  const [accountName, setAccountName] = useState('');\r\n  const [accountNumber, setAccountNumber] = useState('');\r\n  const [ifscCode, setIfscCode] = useState('');\r\n  const [bankName, setBankName] = useState('');\r\n  const [bankBranch, setBankBranch] = useState('');\r\n  const [declarations, setDeclarations] = useState('');\r\n  const [notesForUser, setNotesForUser] = useState('');\r\n  \r\n  const [logo, setLogo] = useState(\r\n    'https://www.pesmcopt.com/admin-media/images/default-logo.png'\r\n  );\r\n\r\n  const navigate = useNavigate();\r\n  const {state} = useLocation();\r\n  const [loading, setLoading] = useState(true);\r\n  const [isFirst, setIsFirst] = useState(true)\r\n\r\n  useEffect(() => {\r\n    if (!user.id) return navigate('/login');\r\n    try {\r\n      const q = query(\r\n        collection(db, 'businesses'),\r\n        where('user_id', '==', user.id)\r\n      );\r\n      \r\n      const unsubscribe = onSnapshot(q, async (querySnapshot) => {\r\n        const business = [];\r\n        querySnapshot.forEach((doc) => {\r\n          business.push(doc.data().name);\r\n        });\r\n        setLoading(false);\r\n        console.log('business.length ', business.length)\r\n        if(business.length > 0 ){setIsFirst(false)}\r\n        if( state.source == 'from_login' && business.length > 0 ){\r\n          navigate('/dashboard');\r\n        }\r\n        const q = query(collection(db, \"businesses\"), where('user_id', '==', user.id));\r\n        const getExsistingDetails = await getDocs(q);\r\n        getExsistingDetails.forEach((doc) => {\r\n          console.log('docdata',doc.id, getExsistingDetails);\r\n          const res = doc.data()\r\n          setBusinessName(res.businessName)\r\n          setBusinessAddress(res.businessAddress)\r\n          setBusinessCity(res.businessCity)\r\n          setBusinessState(res.businessState)\r\n          setBusinessPincode(res.businessPincode)\r\n          setBusinessGSTN(res.businessGSTN)\r\n          setAccountName(res.accountName)\r\n          setAccountNumber(res.accountNumber)\r\n          setIfscCode(res.ifscCode)\r\n          setBankName(res.bankName)\r\n          setBankBranch(res.bankBranch)\r\n          setDeclarations(res.declarations)\r\n          setNotesForUser(res.notesForUser)\r\n        });\r\n      });\r\n      return () => unsubscribe();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [navigate, user.id]);\r\n\r\n  const handleFileReader = (e) => {\r\n    const reader = new FileReader();\r\n    if (e.target.files[0]) {\r\n      reader.readAsDataURL(e.target.files[0]);\r\n    }\r\n    reader.onload = (readerEvent) => {\r\n      setLogo(readerEvent.target.result);\r\n    };\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    console.log('button clicked', isFirst);\r\n    try{\r\n    let docRefID;\r\n\r\n    if(isFirst){\r\n      docRefID = await addDoc(collection(db, 'businesses'), {\r\n        user_id: user.id,\r\n        businessName,\r\n        businessAddress,\r\n        businessCity,\r\n        businessState,\r\n        businessPincode,\r\n        businessGSTN,\r\n        accountName,\r\n        accountNumber,\r\n        ifscCode,\r\n        bankName,\r\n        bankBranch,\r\n        declarations,\r\n        notesForUser,\r\n      });\r\n    }\r\n    else{\r\n      const q1 = query(collection(db, \"businesses\"), where('user_id', '==', user.id));\r\n      const getExsistingDocRef = await getDocs(q1);\r\n      getExsistingDocRef.forEach((doc) => {\r\n        docRefID = doc.id;\r\n      })\r\n      await updateDoc(doc(db, 'businesses', docRefID), {\r\n        user_id: user.id,\r\n        businessName,\r\n        businessAddress,\r\n        businessCity,\r\n        businessState,\r\n        businessPincode,\r\n        businessGSTN,\r\n        accountName,\r\n        accountNumber,\r\n        ifscCode,\r\n        bankName,\r\n        bankBranch,\r\n        declarations,\r\n        notesForUser,\r\n      });\r\n\r\n    }\r\n    const imageRef = ref(storage, `businesses/${docRefID}/image`);\r\n    if (\r\n      logo !== 'https://www.pesmcopt.com/admin-media/images/default-logo.png'\r\n    ) {\r\n      await uploadString(imageRef, logo, 'data_url').then(async () => {\r\n        const downloadURL = await getDownloadURL(imageRef);\r\n        await updateDoc(doc(db, 'businesses', docRefID), {\r\n          logo: downloadURL,\r\n        });\r\n        showToast('success', 'Your profile has been created!');\r\n      });\r\n      navigate('/dashboard');\r\n    }\r\n    else{\r\n      navigate('/dashboard');\r\n    }\r\n  }\r\n  catch(error){\r\n    console.log(error);\r\n    showToast('error', 'Sorry some error while updating the details, Please try again.');\r\n  }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Loading />\r\n      ) : (\r\n        <div>\r\n          <Nav />\r\n          <div className=\"w-full md:p-8 md:w-2/3 md:shadow mx-auto mt-8 rounded p-3 my-8\">\r\n            <h3 className=\"text-center font-bold text-xl mb-6\">\r\n              Setup Business Profile\r\n            </h3>\r\n\r\n            <form\r\n              className=\"w-full mx-auto flex flex-col\"\r\n              onSubmit={handleSubmit}\r\n            >\r\n              <label htmlFor=\"businessName\" className=\"text-sm\">\r\n                Name\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                required\r\n                className=\"py-2 px-4 bg-gray-100 w-full mb-6 capitalize rounded\"\r\n                name=\"businessName\"\r\n                value={businessName}\r\n                onChange={(e) => setBusinessName(e.target.value)}\r\n              />\r\n\r\n              <div className=\"flex items-end space-x-4\">\r\n                <div className=\"flex flex-col w-1/2\">\r\n                  <label htmlFor=\"businessAddress\" className=\"text-sm\">\r\n                    Address\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    required\r\n                    className=\"py-2 px-4 bg-gray-100 w-full mb-6 capitalize rounded\"\r\n                    name=\"businessAddress\"\r\n                    value={businessAddress}\r\n                    onChange={(e) => setBusinessAddress(e.target.value)}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"flex flex-col w-1/2\">\r\n                  <label htmlFor=\"businessCity\" className=\"text-sm\">\r\n                    City\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    required\r\n                    className=\"py-2 px-4 bg-gray-100 w-full mb-6 capitalize rounded\"\r\n                    name=\"businessCity\"\r\n                    value={businessCity}\r\n                    onChange={(e) => setBusinessCity(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex items-end space-x-4\">\r\n                <div className=\"flex flex-col w-1/2\">\r\n                  <label htmlFor=\"businessState\" className=\"text-sm\">\r\n                    State\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    required\r\n                    className=\"py-2 px-4 bg-gray-100 w-full mb-6 capitalize rounded\"\r\n                    name=\"businessState\"\r\n                    value={businessState}\r\n                    onChange={(e) => setBusinessState(e.target.value)}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"flex flex-col w-1/2\">\r\n                  <label htmlFor=\"businessPincode\" className=\"text-sm\">\r\n                    Pincode\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    required\r\n                    className=\"py-2 px-4 bg-gray-100 w-full mb-6 capitalize rounded\"\r\n                    name=\"businessPincode\"\r\n                    value={businessPincode}\r\n                    onChange={(e) => setBusinessPincode(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <label htmlFor=\"businessGSTN\" className=\"text-sm\">\r\n                GSTN\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                required\r\n                className=\"py-2 px-4 bg-gray-100 w-full mb-6 capitalize rounded\"\r\n                name=\"businessGSTN\"\r\n                value={businessGSTN}\r\n                onChange={(e) => setBusinessGSTN(e.target.value)}\r\n              />\r\n\r\n              <h3 className=\"text-center font-bold text-xl mb-6\">\r\n                Setup Business Bank Details\r\n              </h3>\r\n              <label htmlFor=\"accountName\" className=\"text-sm\">\r\n                Account Holder Name\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                required\r\n                className=\"py-2 px-4 bg-gray-100 w-full mb-6 capitalize rounded\"\r\n                name=\"accountName\"\r\n                value={accountName}\r\n                onChange={(e) => setAccountName(e.target.value)}\r\n              />\r\n\r\n              <div className=\"flex items-end space-x-4\">\r\n                <div className=\"flex flex-col w-1/2\">\r\n                  <label htmlFor=\"accountNumber\" className=\"text-sm\">\r\n                    Account Number\r\n                  </label>\r\n                  <input\r\n                    type=\"number\"\r\n                    required\r\n                    className=\"py-2 px-4 bg-gray-100 w-full mb-6 rounded\"\r\n                    name=\"accountNumber\"\r\n                    value={accountNumber}\r\n                    onChange={(e) => setAccountNumber(e.target.value)}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"flex flex-col w-1/2\">\r\n                  <label htmlFor=\"bankName\" className=\"text-sm\">\r\n                    Bank Name\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    required\r\n                    className=\"py-2 px-4 bg-gray-100 w-full mb-6 capitalize rounded\"\r\n                    name=\"bankName\"\r\n                    value={bankName}\r\n                    onChange={(e) => setBankName(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex items-end space-x-4\">\r\n                <div className=\"flex flex-col w-1/2\">\r\n                  <label htmlFor=\"ifscCode\" className=\"text-sm\">\r\n                    IFSC Code\r\n                  </label>\r\n                  <input\r\n                    type=\"number\"\r\n                    required\r\n                    className=\"py-2 px-4 bg-gray-100 w-full mb-6 rounded\"\r\n                    name=\"ifscCode\"\r\n                    value={ifscCode}\r\n                    onChange={(e) => setIfscCode(e.target.value)}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"flex flex-col w-1/2\">\r\n                  <label htmlFor=\"bankBranch\" className=\"text-sm\">\r\n                    Bank Branch\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    required\r\n                    className=\"py-2 px-4 bg-gray-100 w-full mb-6 capitalize rounded\"\r\n                    name=\"bankBranch\"\r\n                    value={bankBranch}\r\n                    onChange={(e) => setBankBranch(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <h3 className=\"text-center font-bold text-xl mb-6\">\r\n                Additional Details\r\n              </h3>\r\n              <label htmlFor=\"declarations\" className=\"text-sm\">\r\n                Declarations\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                required\r\n                className=\"py-2 px-4 bg-gray-100 w-full mb-6 capitalize rounded\"\r\n                name=\"declarations\"\r\n                value={declarations}\r\n                onChange={(e) => setDeclarations(e.target.value)}\r\n              />\r\n              <label htmlFor=\"notesForUser\" className=\"text-sm\">\r\n                Any notes for customers ?\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                required\r\n                className=\"py-2 px-4 bg-gray-100 w-full mb-6 capitalize rounded\"\r\n                name=\"notesForUser\"\r\n                value={notesForUser}\r\n                onChange={(e) => setNotesForUser(e.target.value)}\r\n              />\r\n              <div className=\"flex items-center space-x-4 w-full\">\r\n                <div className=\"flex flex-col w-1/2\">\r\n                  <img\r\n                    src={logo}\r\n                    alt=\"Logo\"\r\n                    className=\" w-full max-h-[300px]\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"flex flex-col w-full\">\r\n                  <label htmlFor=\"logo\" className=\"text-sm mb-1\">\r\n                    {logo ===\r\n                      'https://www.pesmcopt.com/admin-media/images/default-logo.png' &&\r\n                      'Upload logo'}\r\n                  </label>\r\n                  <input\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    className=\"w-full mb-6  rounded\"\r\n                    name=\"logo\"\r\n                    onChange={handleFileReader}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <button className=\"bg-blue-800 text-gray-100 w-full p-5 rounded my-6\">\r\n                {isFirst?'COMPLETE PROFILE':'UPDATE PROFILE'}\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SetupProfile;","import { makeStyles } from '@mui/styles';\r\n\r\nconst styles = (theme) => {\r\n  return {\r\n    toolBar: {\r\n      height: '10vh',\r\n      display: 'flex',\r\n      justifyContent: 'space-between',\r\n      padding: '20px',\r\n      backgroundColor: 'white',\r\n    },\r\n    logo: {\r\n      color: \"#041562\",\r\n      cursor: 'pointer',\r\n    },\r\n    inputField: {\r\n      marginBottom: '20px !important',\r\n      width: \"100%\"\r\n    },\r\n    link: {\r\n      color: \"#000\",\r\n      cursor: \"pointer\"\r\n    },\r\n    menuIcon: {\r\n      color: '#000',\r\n    },\r\n    heroContainer: {\r\n      width: \"100%\", \r\n      minHeight: \"80vh\", \r\n      display: \"flex\", \r\n      flexDirection: \"column\", \r\n      alignItems: \"center\", \r\n      justifyContent: \"center\", \r\n      textAlign: \"center\"\r\n    },\r\n    heroText: {\r\n      marginBottom: \"20px !important\", \r\n      fontWeight: \"bolder\", \r\n      color: \"#041562\"\r\n    },\r\n    heroSubtitle: {\r\n      marginBottom: \"30px !important\", \r\n      color: \"#11468F\", \r\n      opacity: \"0.8\"\r\n    }, \r\n    authGridContainer: {\r\n      width: \"100%\", \r\n      height: \"100%\"\r\n    }, \r\n    authGridImage: {\r\n      backgroundColor: \"#11468F\", \r\n      display: \"flex\", \r\n      alignItems: \"center\", \r\n      justifyContent: \"center\", \r\n      minHeight: \"100vh\", \r\n      padding:\"5px\",\r\n      [theme.breakpoints.between('xs', 'md')]: {\r\n        display: \"none\"\r\n      }\r\n    }, \r\n    authSvg: {\r\n      width: \"100%\"\r\n    },\r\n    authForm: {\r\n      minHeight: \"100vh\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n      flexDirection: \"column !important\",\r\n    },\r\n    authFormContainer: { \r\n      padding: \"10px 15px 0px 15px\",\r\n    [theme.breakpoints.between('xs', 'sm')]: {\r\n      padding: \"10px 15px 0px 15px\",\r\n    }}\r\n  };\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\nexport default useStyles;"],"names":["props","children","window","trigger","useScrollTrigger","disableHysteresis","threshold","target","undefined","React","elevation","classes","useStyles","useState","mobileMenu","setMobileMenu","loggedIn","setLoggedIn","user","useSelector","state","navigate","useNavigate","toggleDrawer","open","event","type","key","useEffect","id","signOut","location","reload","showToast","theme","useTheme","matches","useMediaQuery","breakpoints","down","Box","sx","marginBottom","AppBar","Toolbar","className","toolBar","to","Typography","variant","logo","IconButton","size","edge","color","onClick","Menu","menuIcon","fontSize","Drawer","anchor","onClose","width","role","onKeyDown","List","ListItem","button","ListItemText","primary","display","justifyContent","flexGrow","link","source","aa","console","log","businessName","setBusinessName","businessAddress","setBusinessAddress","businessCity","setBusinessCity","businessState","setBusinessState","businessPincode","setBusinessPincode","businessGSTN","setBusinessGSTN","accountName","setAccountName","accountNumber","setAccountNumber","ifscCode","setIfscCode","bankName","setBankName","bankBranch","setBankBranch","declarations","setDeclarations","notesForUser","setNotesForUser","setLogo","useLocation","loading","setLoading","isFirst","setIsFirst","q","query","collection","db","where","unsubscribe","onSnapshot","querySnapshot","business","forEach","doc","push","data","name","length","getDocs","getExsistingDetails","res","error","handleSubmit","e","preventDefault","addDoc","user_id","docRefID","q1","updateDoc","imageRef","ref","storage","uploadString","then","getDownloadURL","downloadURL","onSubmit","htmlFor","required","value","onChange","src","alt","accept","reader","FileReader","files","readAsDataURL","onload","readerEvent","result","makeStyles","height","padding","backgroundColor","cursor","inputField","heroContainer","minHeight","flexDirection","alignItems","textAlign","heroText","fontWeight","heroSubtitle","opacity","authGridContainer","authGridImage","between","authSvg","authForm","authFormContainer"],"sourceRoot":""}